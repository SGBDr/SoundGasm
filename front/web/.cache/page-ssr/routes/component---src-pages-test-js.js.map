{"version":3,"file":"component---src-pages-test-js.js","mappings":"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","sources":["webpack://soundgasm/./src/components/reader/controller.js","webpack://soundgasm/./src/components/reader/index.js","webpack://soundgasm/./src/pages/test.js","webpack://soundgasm/./src/utils/GlobalStyles.js","webpack://soundgasm/./src/utils/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLOR } from '../../utils';\r\n\r\nexport const Controller = (props) => {\r\n    // initialise Ref to manipulate inbuild audio tag\r\n    const audioRef = useRef(null);\r\n    const [musicURL, setMusicURL] = useState(props.musicURL);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    \r\n    //Listen to changes in musicURL in parent component\r\n    useEffect(() => {\r\n        setMusicURL(props.musicURL);\r\n      }, [props.musicURL]);\r\n    \r\n    // Listen to time update in inbuild audio player\r\n    const handleTimeUpdate = () => {\r\n        const newTime = audioRef.current.currentTime;\r\n        setCurrentTime(newTime);\r\n        if(currentTime === duration) setIsPlaying(false);\r\n    }\r\n\r\n    // Listen to metadata loading in inbuild audio player\r\n    const handleLoadedMetadata = () => {\r\n        const newDuration = audioRef.current.duration;\r\n        setDuration(newDuration);\r\n    }\r\n\r\n    // Play/pause inbuild audio player onClick\r\n    const handlePlayPause = () => {\r\n        if(isPlaying) {\r\n            setIsPlaying(false);\r\n            audioRef.current.pause();\r\n        }\r\n        else{\r\n            setIsPlaying(true);\r\n            audioRef.current.play();\r\n        }\r\n    };\r\n\r\n    const handleForward = () => {\r\n        let newTime=currentTime+10;\r\n        newTime=(newTime<0)?0:(newTime>duration)?duration:newTime;\r\n        setCurrentTime(newTime);\r\n        audioRef.current.currentTime = newTime;\r\n    }\r\n\r\n    const handleBackward = () => {\r\n        let newTime=currentTime-10;\r\n        newTime=(newTime<0)?0:(newTime>duration)?duration:newTime;\r\n        setCurrentTime(newTime);\r\n        audioRef.current.currentTime = newTime;\r\n    }\r\n    // Synchronise range with inbuild audio player\r\n    const handleRangeChange = (event) => {\r\n        audioRef.current.currentTime = event.target.value;\r\n        setCurrentTime(audioRef.current.currentTime);\r\n    };\r\n    \r\n    // convert seconds to standard minutes\r\n    const secondsToMinutes=(seconds)=> {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = Math.floor(seconds % 60);\r\n        const formattedSeconds = remainingSeconds < 10 ? `0${remainingSeconds}` : remainingSeconds;\r\n        return `${minutes}:${formattedSeconds}`;\r\n    }\r\n      \r\n\r\n    return(\r\n        <ControlWrapper>\r\n            <audio ref={audioRef}\r\n                preload=\"metadata\"\r\n                src={musicURL}\r\n                onTimeUpdate={handleTimeUpdate}\r\n                onLoadedMetadata={handleLoadedMetadata} \r\n            />\r\n            <ControlRangeWrapper>\r\n                <input className=\"play-range\"\r\n                    type=\"range\"\r\n                    min=\"0\" max={audioRef.current ? audioRef.current.duration : 0}\r\n                    value={currentTime}\r\n                    onChange={handleRangeChange}/>\r\n                <div class=\"start-stop\">\r\n                    <p>{secondsToMinutes(currentTime)}</p>\r\n                    <p>{secondsToMinutes(duration-currentTime)}</p>\r\n                </div>\r\n            </ControlRangeWrapper>\r\n            <ControlTabWrapper>\r\n                <MyButton id=\"b-prev\"><img class=\"icon\" alt=\"...\" src=\"/images/icons/player/previous.png\" /></MyButton>\r\n                <MyButton id=\"b-back\" onClick={handleBackward}><img class=\"icon\" alt=\"...\" src=\"/images/icons/player/backward.png\" /></MyButton>\r\n                <MyButton id=\"b-play\" onClick={handlePlayPause}><img class=\"icon\" alt=\"...\" src={isPlaying?\"/images/icons/player/pause.png\":\"/images/icons/player/play.png\"} /></MyButton>\r\n                <MyButton id=\"b-for\" onClick={handleForward}><img class=\"icon\" alt=\"...\" src=\"/images/icons/player/forward.png\" /></MyButton>\r\n                <MyButton id=\"b-next\"><img class=\"icon\" alt=\"...\" src=\"/images/icons/player/next.png\" /></MyButton>\r\n            </ControlTabWrapper>\r\n        </ControlWrapper>\r\n    );\r\n\r\n}\r\n\r\nconst ControlWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: end;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0 20px;\r\n    // border: 1px solid red;\r\n    \r\n`;\r\n\r\nconst ControlRangeWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 20px;\r\n    width: 100%;\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    .play-range{\r\n        width: 100%;\r\n        margin: 0 0 5px  0;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    .start-stop{\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-family: Teko;\r\n        font-size: 13px;\r\n        font-weight: 800;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst ControlTabWrapper = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 100px;\r\n    \r\n`;\r\n\r\nconst MyButton = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    .icon{\r\n        width: 25px;\r\n        height: 25px;\r\n    }\r\n    &:hover{\r\n        cursor: pointer;\r\n        border: 1px solid ${COLOR.secondary};\r\n        border-radius: 5px;\r\n        transition: 2ms ease-out;\r\n    }\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLOR } from '../../utils';\r\nimport { Controller } from './controller';\r\n\r\nexport const Reader = () => {\r\n    const [musicURL, setMusicURL] = React.useState(\"/images/icons/Dedicace.mp3\");\r\n\r\n    return(\r\n        <Wrapper>\r\n            <TitleWrapper>\r\n                <p class=\"title\">Living My Best Life</p>\r\n                <p class=\"artist\">By : Ben Hector</p>\r\n            </TitleWrapper>\r\n            <ControlWrapper>\r\n                <Banner />\r\n                <Controller\r\n                    musicURL={musicURL} />\r\n            </ControlWrapper>\r\n        </Wrapper>\r\n    );\r\n\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 20px;\r\n    right: 20px;\r\n    min-width: 300px;\r\n    height: 200px;\r\n    border-radius: 32px;\r\n    padding: 10px 20px;\r\n    background-color: ${COLOR.darkAlt};\r\n`;\r\n\r\n\r\nconst Banner = styled.img`\r\n    width: 200px;\r\n    height: 120px;\r\n    border-radius: 5px;\r\n    background-color: ${COLOR.background};\r\n    margin: 10px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    p{\r\n        margin: 2px 0px; \r\n        padding: 0;\r\n        font-family: Teko;\r\n        &.title{\r\n            font-weight: 900;\r\n            font-size: 25px;\r\n            color: white;\r\n        }\r\n        &.artist{\r\n            font-weight: 300;\r\n            font-size: 18px;\r\n            color: grey;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ControlWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: 140px;\r\n    padding: 10px;\r\n`;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { GlobalStyles } from '../utils/GlobalStyles';\r\nimport { Reader } from '../components/reader';\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Reader />\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const Head = () => <title>Test</title>\r\n","//c'est un composant qui ne peut pas avoir d'enfant et qui permet de donner du style a d'autres composants\r\nimport { COLOR } from './index';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body {\r\n        background: ${COLOR.background};\r\n\r\n        @media (prefers-color-scheme: dark) {\r\n            background: ${COLOR.background};\r\n        }\r\n    }\r\n`;","export const COLOR = {\r\n    background: '#1D2123',\r\n    primary: '#307DB8',\r\n    secondary: '#FACD66',\r\n    playButtonCard: 'rgba(124, 141, 181, .7)',\r\n    text: '#EFEEE0',\r\n    darkAlt: '#111516',\r\n};\r\n\r\nexport const SIZE = {\r\n    title: `font-size: 25px\r\n            font-weigth: 900`,\r\n    title1: `font-size: 24px\r\n             font-weigth: 800`,\r\n    title2: `font-size: 20px\r\n             font-weigth: 700`,\r\n    title3: `font-size: 16px\r\n             font-weigth: bold`,\r\n    text:   `font-size: 14px`,\r\n}"],"names":["React","useRef","useState","useEffect","styled","COLOR","Controller","props","audioRef","musicURL","setMusicURL","currentTime","setCurrentTime","duration","setDuration","isPlaying","setIsPlaying","handleTimeUpdate","newTime","current","handleLoadedMetadata","newDuration","handlePlayPause","pause","play","handleForward","handleBackward","handleRangeChange","event","target","value","secondsToMinutes","seconds","minutes","Math","floor","remainingSeconds","formattedSeconds","ControlWrapper","div","ControlRangeWrapper","ControlTabWrapper","MyButton","button","secondary","Reader","Wrapper","darkAlt","Banner","img","background","TitleWrapper","GlobalStyles","IndexPage","Head","createGlobalStyle","primary","playButtonCard","text","SIZE","title","title1","title2","title3"],"sourceRoot":""}